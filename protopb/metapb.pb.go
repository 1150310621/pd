// Code generated by protoc-gen-go.
// source: metapb.proto
// DO NOT EDIT!

/*
Package protopb is a generated protocol buffer package.

It is generated from these files:
	metapb.proto
	pdpb.proto

It has these top-level messages:
	Cluster
	Node
	Store
	Peer
	Region
	Leader
	TsoRequest
	Timestamp
	TsoResponse
	BootstrapRequest
	BootstrapResponse
	IsBootstrappedRequest
	IsBootstrappedResponse
	AllocIdRequest
	AllocIdResponse
	GetMetaRequest
	GetMetaResponse
	PutMetaRequest
	PutMetaResponse
	DeleteMetaRequest
	DeleteMetaResponse
	AskChangePeerRequest
	AskChangePeerResponse
	AskSplitRequest
	AskSplitResponse
	RequestHeader
	ResponseHeader
	Request
	Response
	BootstrappedError
	Error
*/
package protopb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Cluster struct {
	ClusterId *uint64 `protobuf:"varint,1,opt,name=cluster_id" json:"cluster_id,omitempty"`
	// max peer number for a region.
	// pd will do the auto-balance if region peer number mismatches.
	MaxPeerNumber    *uint32 `protobuf:"varint,2,opt,name=max_peer_number" json:"max_peer_number,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Cluster) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

func (m *Cluster) GetMaxPeerNumber() uint32 {
	if m != nil && m.MaxPeerNumber != nil {
		return *m.MaxPeerNumber
	}
	return 0
}

type Node struct {
	NodeId           *uint64 `protobuf:"varint,1,opt,name=node_id" json:"node_id,omitempty"`
	Address          *string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Node) GetNodeId() uint64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *Node) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

type Store struct {
	StoreId          *uint64 `protobuf:"varint,1,opt,name=store_id" json:"store_id,omitempty"`
	NodeId           *uint64 `protobuf:"varint,2,opt,name=node_id" json:"node_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Store) Reset()                    { *m = Store{} }
func (m *Store) String() string            { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()               {}
func (*Store) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Store) GetStoreId() uint64 {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return 0
}

func (m *Store) GetNodeId() uint64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

type Peer struct {
	PeerId           *uint64 `protobuf:"varint,1,opt,name=peer_id" json:"peer_id,omitempty"`
	NodeId           *uint64 `protobuf:"varint,2,opt,name=node_id" json:"node_id,omitempty"`
	StoreId          *uint64 `protobuf:"varint,3,opt,name=store_id" json:"store_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Peer) Reset()                    { *m = Peer{} }
func (m *Peer) String() string            { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()               {}
func (*Peer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Peer) GetPeerId() uint64 {
	if m != nil && m.PeerId != nil {
		return *m.PeerId
	}
	return 0
}

func (m *Peer) GetNodeId() uint64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *Peer) GetStoreId() uint64 {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return 0
}

type Region struct {
	RegionId *uint64 `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	// Region key range [start_key, end_key).
	StartKey []byte  `protobuf:"bytes,2,opt,name=start_key" json:"start_key,omitempty"`
	EndKey   []byte  `protobuf:"bytes,3,opt,name=end_key" json:"end_key,omitempty"`
	Peers    []*Peer `protobuf:"bytes,4,rep,name=peers" json:"peers,omitempty"`
	// The peer id is generated by outer placement driver incrementally,
	// and we can guarantee that the next generated one is larger than
	// the max_peer_id.
	// If we receive a message which the peer is not in region peers
	// and the peer id is <= max_peer_id, we can be sure that the
	// peer which sends this message is a tombstone peer and can
	// skip the message directly.
	MaxPeerId        *uint64 `protobuf:"varint,5,opt,name=max_peer_id" json:"max_peer_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Region) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *Region) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *Region) GetEndKey() []byte {
	if m != nil {
		return m.EndKey
	}
	return nil
}

func (m *Region) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *Region) GetMaxPeerId() uint64 {
	if m != nil && m.MaxPeerId != nil {
		return *m.MaxPeerId
	}
	return 0
}

func init() {
	proto.RegisterType((*Cluster)(nil), "metapb.Cluster")
	proto.RegisterType((*Node)(nil), "metapb.Node")
	proto.RegisterType((*Store)(nil), "metapb.Store")
	proto.RegisterType((*Peer)(nil), "metapb.Peer")
	proto.RegisterType((*Region)(nil), "metapb.Region")
}

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x50, 0xbf, 0x4f, 0x84, 0x30,
	0x14, 0xce, 0x49, 0x39, 0xe4, 0x1d, 0xe6, 0xb4, 0x0e, 0x92, 0xb8, 0x5c, 0x3a, 0x11, 0x87, 0x1b,
	0x1c, 0x1c, 0x1c, 0x75, 0x37, 0x46, 0x37, 0x17, 0x52, 0xec, 0x8b, 0x21, 0x4a, 0x5b, 0xdb, 0x92,
	0xe8, 0x7f, 0x6f, 0xfb, 0x50, 0x09, 0xc3, 0x4d, 0x7c, 0x7c, 0xef, 0xfb, 0xd1, 0x7c, 0x50, 0x0d,
	0x18, 0xa4, 0xed, 0xf6, 0xd6, 0x99, 0x60, 0xf8, 0x7a, 0xfa, 0x13, 0x37, 0x50, 0xdc, 0x7f, 0x8c,
	0x3e, 0xa0, 0xe3, 0x1c, 0xe0, 0x75, 0x82, 0x6d, 0xaf, 0xea, 0xd5, 0x6e, 0xd5, 0x30, 0x7e, 0x01,
	0xdb, 0x41, 0x7e, 0xb5, 0x16, 0x23, 0xa9, 0xc7, 0xa1, 0x43, 0x57, 0x1f, 0xc5, 0xc3, 0x89, 0x68,
	0x80, 0x3d, 0x18, 0x85, 0x7c, 0x0b, 0x85, 0x8e, 0xdf, 0xd9, 0x11, 0x09, 0xa9, 0x94, 0x43, 0xef,
	0x49, 0x59, 0x8a, 0x2b, 0xc8, 0x9f, 0x83, 0x71, 0xc8, 0x4f, 0xe1, 0xd8, 0x27, 0xb0, 0xd0, 0xfe,
	0x99, 0x93, 0x96, 0x89, 0x5b, 0x60, 0x8f, 0xb1, 0x2a, 0x1d, 0xa8, 0xf2, 0xa0, 0x72, 0x11, 0x96,
	0x91, 0xf7, 0x13, 0xd6, 0x4f, 0xf8, 0xd6, 0x1b, 0xcd, 0xcf, 0xa0, 0x74, 0x84, 0x66, 0x7f, 0xa4,
	0x7c, 0x90, 0x2e, 0xb4, 0xef, 0xf8, 0x4d, 0x09, 0x55, 0x8a, 0x44, 0xad, 0x88, 0xc8, 0x88, 0xb8,
	0x84, 0x3c, 0x95, 0xfa, 0x9a, 0xed, 0xb2, 0x66, 0x73, 0x5d, 0xed, 0x7f, 0x07, 0xa3, 0x17, 0x9d,
	0xc3, 0xe6, 0x7f, 0x88, 0x98, 0x9a, 0xa7, 0xd4, 0xbb, 0xf2, 0xa5, 0xa0, 0x35, 0x6d, 0xf7, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x2c, 0xaf, 0xf4, 0x41, 0x5e, 0x01, 0x00, 0x00,
}
